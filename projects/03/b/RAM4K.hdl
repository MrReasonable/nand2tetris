// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=ramloada, b=ramloadb, c=ramloadc, d=ramloadd, e=ramloade, f=ramloadf, g=ramloadg, h=ramloadh);
    RAM512(in=in, load=ramloada, address=address[0..8], out=rama);
    RAM512(in=in, load=ramloadb, address=address[0..8], out=ramb);
    RAM512(in=in, load=ramloadc, address=address[0..8], out=ramc);
    RAM512(in=in, load=ramloadd, address=address[0..8], out=ramd);
    RAM512(in=in, load=ramloade, address=address[0..8], out=rame);
    RAM512(in=in, load=ramloadf, address=address[0..8], out=ramf);
    RAM512(in=in, load=ramloadg, address=address[0..8], out=ramg);
    RAM512(in=in, load=ramloadh, address=address[0..8], out=ramh);
    Mux8Way16(a=rama,b=ramb,c=ramc,d=ramd,e=rame,f=ramf,g=ramg,h=ramh,sel=address[9..11],out=out);
}